/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces;

import Booking.Booking;
import Booking.Insert_bookings;
import Database.DB_conn;
import GoogleDrive.DriveStart;
import GoogleDrive.UploadFile;
import Patient.Patient;
import com.google.firebase.database.ChildEventListener;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;
import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.security.GeneralSecurityException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.RowSorter;
import javax.swing.SortOrder;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import java.awt.Desktop;
import java.net.URL;

/**
 *
 * @author MaC
 */
public class patientRecords extends javax.swing.JFrame {

    /**
     * Creates new form patientRecords
     */
    
    int xMouse;
    int yMouse;
    public patientRecords() {
        initComponents();
        setBackground(new Color(0,0,0,0));
        
        try {
            DB_conn.initFirbase();
        } catch (IOException ex) {
            Logger.getLogger(Insert_bookings.class.getName()).log(Level.SEVERE, null, ex);
        } 
//        
        columnhide1();
        columnhide2();
        tblload();        
    }
    
    private String log_name;
    private String user_role;
    
    public patientRecords(String PID,String Name,String PhoneNm,String PID2){
            initComponents();
            columnhide1();
            columnhide2();
            tblload();
            tableSort();
            txtFullName.setText(Name);
            txtMNumber.setText(PhoneNm);
            if(PID!="Not Registered"){
                txtSearch.setText(PID2);
                searchFilter(PID);
            }
        //searchFilter(PID);
    }
    public patientRecords(String log_name, String jobrole, String x) {
        initComponents();
        setBackground(new Color(0, 0, 0, 0));
        columnhide1();
        columnhide2();
        tblload();
        this.user_role = jobrole;
        this.log_name = log_name;
        lbl_logname.setText(log_name);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The copassresntent of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kGradientPanel2 = new keeptoo.KGradientPanel();
        kGradientPanel3 = new keeptoo.KGradientPanel();
        txtPID = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtFullName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtDOB = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAddress = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        txtCountry = new javax.swing.JTextField();
        txtMNumber = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtTNumber = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDrugAllergies = new javax.swing.JTextArea();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtCurrentMed = new javax.swing.JTextArea();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtMedHistory = new javax.swing.JTextArea();
        txtSearch = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        btnload = new keeptoo.KButton();
        btnSearch = new keeptoo.KButton();
        btnDel = new keeptoo.KButton();
        btnURLOpener = new keeptoo.KButton();
        btnSave = new keeptoo.KButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        tblPatient = new javax.swing.JTable();
        btnAdd1 = new keeptoo.KButton();
        btnUpdate = new keeptoo.KButton();
        btnClear1 = new keeptoo.KButton();
        btnInsert = new keeptoo.KButton();
        btnClose = new javax.swing.JLabel();
        btnMinimize = new javax.swing.JLabel();
        lbl_logname = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblBack = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        kGradientPanel2.setkBorderRadius(25);
        kGradientPanel2.setkEndColor(new java.awt.Color(76, 161, 175));
        kGradientPanel2.setkGradientFocus(600);
        kGradientPanel2.setkStartColor(new java.awt.Color(44, 62, 80));
        kGradientPanel2.setOpaque(false);
        kGradientPanel2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                kGradientPanel2MouseDragged(evt);
            }
        });
        kGradientPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                kGradientPanel2MousePressed(evt);
            }
        });
        kGradientPanel2.setLayout(null);

        kGradientPanel3.setBackground(new java.awt.Color(255, 255, 255));
        kGradientPanel3.setkBorderRadius(25);
        kGradientPanel3.setkEndColor(new java.awt.Color(240, 240, 240));
        kGradientPanel3.setkStartColor(new java.awt.Color(204, 204, 204));
        kGradientPanel3.setOpaque(false);
        kGradientPanel3.setPreferredSize(new java.awt.Dimension(1280, 720));
        kGradientPanel3.setLayout(null);

        txtPID.setEditable(false);
        txtPID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPIDActionPerformed(evt);
            }
        });
        txtPID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPIDKeyReleased(evt);
            }
        });
        kGradientPanel3.add(txtPID);
        txtPID.setBounds(198, 89, 193, 30);

        jLabel4.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        jLabel4.setText("Patient's ID");
        kGradientPanel3.add(jLabel4);
        jLabel4.setBounds(45, 93, 136, 19);

        txtFullName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFullNameActionPerformed(evt);
            }
        });
        txtFullName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFullNameKeyReleased(evt);
            }
        });
        kGradientPanel3.add(txtFullName);
        txtFullName.setBounds(198, 137, 396, 30);

        jLabel5.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        jLabel5.setText("Full Name");
        kGradientPanel3.add(jLabel5);
        jLabel5.setBounds(45, 141, 136, 19);

        txtDOB.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        kGradientPanel3.add(txtDOB);
        txtDOB.setBounds(198, 185, 199, 28);

        jLabel6.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        jLabel6.setText("DOB");
        kGradientPanel3.add(jLabel6);
        jLabel6.setBounds(45, 185, 136, 19);

        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });
        txtID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtIDKeyReleased(evt);
            }
        });
        kGradientPanel3.add(txtID);
        txtID.setBounds(198, 231, 408, 30);

        jLabel7.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        jLabel7.setText("Address");
        kGradientPanel3.add(jLabel7);
        jLabel7.setBounds(45, 296, 136, 19);

        jLabel8.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        jLabel8.setText("ID Number");
        kGradientPanel3.add(jLabel8);
        jLabel8.setBounds(45, 235, 136, 19);

        txtAddress.setColumns(20);
        txtAddress.setRows(5);
        jScrollPane1.setViewportView(txtAddress);

        kGradientPanel3.add(jScrollPane1);
        jScrollPane1.setBounds(198, 288, 302, 96);

        jLabel9.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        jLabel9.setText("Country");
        kGradientPanel3.add(jLabel9);
        jLabel9.setBounds(45, 416, 136, 19);

        txtCountry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCountryActionPerformed(evt);
            }
        });
        txtCountry.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCountryKeyReleased(evt);
            }
        });
        kGradientPanel3.add(txtCountry);
        txtCountry.setBounds(198, 412, 196, 30);

        txtMNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMNumberActionPerformed(evt);
            }
        });
        txtMNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMNumberKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMNumberKeyTyped(evt);
            }
        });
        kGradientPanel3.add(txtMNumber);
        txtMNumber.setBounds(198, 460, 196, 30);

        jLabel10.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        jLabel10.setText("Mobile Number");
        kGradientPanel3.add(jLabel10);
        jLabel10.setBounds(45, 464, 136, 19);

        txtTNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTNumberActionPerformed(evt);
            }
        });
        txtTNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTNumberKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTNumberKeyTyped(evt);
            }
        });
        kGradientPanel3.add(txtTNumber);
        txtTNumber.setBounds(198, 508, 196, 30);

        jLabel11.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        jLabel11.setText("Tel. Number");
        kGradientPanel3.add(jLabel11);
        jLabel11.setBounds(45, 512, 136, 19);

        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });
        txtEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEmailKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEmailKeyTyped(evt);
            }
        });
        kGradientPanel3.add(txtEmail);
        txtEmail.setBounds(198, 556, 196, 30);

        jLabel12.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        jLabel12.setText("Email");
        kGradientPanel3.add(jLabel12);
        jLabel12.setBounds(45, 560, 136, 19);

        txtDrugAllergies.setColumns(20);
        txtDrugAllergies.setRows(5);
        jScrollPane2.setViewportView(txtDrugAllergies);

        kGradientPanel3.add(jScrollPane2);
        jScrollPane2.setBounds(520, 460, 340, 90);

        jLabel13.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        jLabel13.setText("Drug Allergies");
        kGradientPanel3.add(jLabel13);
        jLabel13.setBounds(520, 430, 220, 19);

        jLabel14.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        jLabel14.setText("Current Medicine");
        kGradientPanel3.add(jLabel14);
        jLabel14.setBounds(900, 430, 230, 20);

        txtCurrentMed.setColumns(20);
        txtCurrentMed.setRows(5);
        jScrollPane3.setViewportView(txtCurrentMed);

        kGradientPanel3.add(jScrollPane3);
        jScrollPane3.setBounds(520, 600, 340, 100);

        jLabel15.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        jLabel15.setText("Medical History");
        kGradientPanel3.add(jLabel15);
        jLabel15.setBounds(520, 570, 130, 19);

        txtMedHistory.setColumns(20);
        txtMedHistory.setRows(5);
        jScrollPane4.setViewportView(txtMedHistory);

        kGradientPanel3.add(jScrollPane4);
        jScrollPane4.setBounds(910, 460, 340, 90);

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });
        kGradientPanel3.add(txtSearch);
        txtSearch.setBounds(826, 89, 237, 30);

        jLabel16.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 14)); // NOI18N
        jLabel16.setText("Patient");
        kGradientPanel3.add(jLabel16);
        jLabel16.setBounds(755, 93, 67, 19);

        btnload.setText("Clear");
        btnload.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 18)); // NOI18N
        btnload.setkAllowGradient(false);
        btnload.setkBackGroundColor(new java.awt.Color(48, 67, 82));
        btnload.setkHoverColor(new java.awt.Color(63, 87, 107));
        btnload.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnload.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnloadMouseClicked(evt);
            }
        });
        kGradientPanel3.add(btnload);
        btnload.setBounds(750, 130, 80, 30);

        btnSearch.setText("Search");
        btnSearch.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 18)); // NOI18N
        btnSearch.setkAllowGradient(false);
        btnSearch.setkBackGroundColor(new java.awt.Color(48, 67, 82));
        btnSearch.setkHoverColor(new java.awt.Color(63, 87, 107));
        btnSearch.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        kGradientPanel3.add(btnSearch);
        btnSearch.setBounds(1080, 80, 146, 40);

        btnDel.setText("Delete");
        btnDel.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 18)); // NOI18N
        btnDel.setkAllowGradient(false);
        btnDel.setkBackGroundColor(new java.awt.Color(48, 67, 82));
        btnDel.setkHoverColor(new java.awt.Color(63, 87, 107));
        btnDel.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnDel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDelMouseClicked(evt);
            }
        });
        kGradientPanel3.add(btnDel);
        btnDel.setBounds(23, 671, 167, 45);

        btnURLOpener.setText("View");
        btnURLOpener.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 18)); // NOI18N
        btnURLOpener.setkAllowGradient(false);
        btnURLOpener.setkBackGroundColor(new java.awt.Color(48, 67, 82));
        btnURLOpener.setkHoverColor(new java.awt.Color(63, 87, 107));
        btnURLOpener.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnURLOpener.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnURLOpenerMouseClicked(evt);
            }
        });
        kGradientPanel3.add(btnURLOpener);
        btnURLOpener.setBounds(1050, 670, 110, 45);

        btnSave.setText("Clear");
        btnSave.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 18)); // NOI18N
        btnSave.setkAllowGradient(false);
        btnSave.setkBackGroundColor(new java.awt.Color(48, 67, 82));
        btnSave.setkHoverColor(new java.awt.Color(63, 87, 107));
        btnSave.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSaveMouseClicked(evt);
            }
        });
        kGradientPanel3.add(btnSave);
        btnSave.setBounds(241, 671, 167, 45);

        tblPatient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Name", "NIC", "Phone Number", "PID", "DOB", "Address", "Tel Number", "Country", "Current Medicines", "Drug Allergies", "Doctor Note", "Email", "Medical History"
            }
        ));
        tblPatient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPatientMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tblPatient);

        kGradientPanel3.add(jScrollPane6);
        jScrollPane6.setBounds(740, 170, 530, 230);

        btnAdd1.setText("Add ");
        btnAdd1.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 18)); // NOI18N
        btnAdd1.setkAllowGradient(false);
        btnAdd1.setkBackGroundColor(new java.awt.Color(48, 67, 82));
        btnAdd1.setkHoverColor(new java.awt.Color(63, 87, 107));
        btnAdd1.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnAdd1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAdd1MouseClicked(evt);
            }
        });
        kGradientPanel3.add(btnAdd1);
        btnAdd1.setBounds(20, 610, 167, 45);

        btnUpdate.setText("Update");
        btnUpdate.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 18)); // NOI18N
        btnUpdate.setkAllowGradient(false);
        btnUpdate.setkBackGroundColor(new java.awt.Color(48, 67, 82));
        btnUpdate.setkHoverColor(new java.awt.Color(63, 87, 107));
        btnUpdate.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUpdateMouseClicked(evt);
            }
        });
        kGradientPanel3.add(btnUpdate);
        btnUpdate.setBounds(240, 610, 167, 45);

        btnClear1.setText("Go to Booking");
        btnClear1.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 18)); // NOI18N
        btnClear1.setkAllowGradient(false);
        btnClear1.setkBackGroundColor(new java.awt.Color(48, 67, 82));
        btnClear1.setkHoverColor(new java.awt.Color(63, 87, 107));
        btnClear1.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnClear1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnClear1MouseClicked(evt);
            }
        });
        kGradientPanel3.add(btnClear1);
        btnClear1.setBounds(890, 600, 250, 45);

        btnInsert.setText("Insert");
        btnInsert.setFont(new java.awt.Font("Microsoft YaHei UI", 0, 18)); // NOI18N
        btnInsert.setkAllowGradient(false);
        btnInsert.setkBackGroundColor(new java.awt.Color(48, 67, 82));
        btnInsert.setkHoverColor(new java.awt.Color(63, 87, 107));
        btnInsert.setkHoverForeGround(new java.awt.Color(255, 255, 255));
        btnInsert.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnInsertMouseClicked(evt);
            }
        });
        kGradientPanel3.add(btnInsert);
        btnInsert.setBounds(890, 670, 100, 45);

        kGradientPanel2.add(kGradientPanel3);
        kGradientPanel3.setBounds(10, 82, 1350, 743);

        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/close.png"))); // NOI18N
        btnClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCloseMouseClicked(evt);
            }
        });
        kGradientPanel2.add(btnClose);
        btnClose.setBounds(1331, 11, 29, 30);

        btnMinimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/mini.png"))); // NOI18N
        btnMinimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnMinimizeMouseClicked(evt);
            }
        });
        kGradientPanel2.add(btnMinimize);
        btnMinimize.setBounds(1297, 11, 28, 30);

        lbl_logname.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        lbl_logname.setForeground(new java.awt.Color(255, 255, 255));
        lbl_logname.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8_user_male_30px_1.png"))); // NOI18N
        lbl_logname.setText("Name");
        kGradientPanel2.add(lbl_logname);
        lbl_logname.setBounds(1066, 51, 200, 30);

        jLabel1.setFont(new java.awt.Font("Impact", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Patient Records");
        kGradientPanel2.add(jLabel1);
        jLabel1.setBounds(180, 20, 233, 45);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-fever-80.png"))); // NOI18N
        kGradientPanel2.add(jLabel2);
        jLabel2.setBounds(100, 10, 80, 70);

        lblBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/icons8-go-back-70.png"))); // NOI18N
        lblBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBackMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblBackMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblBackMouseExited(evt);
            }
        });
        kGradientPanel2.add(lblBack);
        lblBack.setBounds(20, 10, 70, 60);

        getContentPane().add(kGradientPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 836));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnMinimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMinimizeMouseClicked
        //login log = new login();
        this.setState(patientRecords.ICONIFIED);
    }//GEN-LAST:event_btnMinimizeMouseClicked

    private void btnCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCloseMouseClicked
        int result = JOptionPane.showConfirmDialog(this, "Are You Sure You Want To Cancel?",null,JOptionPane.YES_NO_OPTION);
        
        if(result == 0){
            this.dispose();
            home hm = new home(log_name, user_role);
            hm.setVisible(true);
        }else{
            System.out.println(result);            
        }
    }//GEN-LAST:event_btnCloseMouseClicked

    private void txtPIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPIDActionPerformed

    private void txtPIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPIDKeyReleased

       
    }//GEN-LAST:event_txtPIDKeyReleased

    private void txtFullNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFullNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFullNameActionPerformed

    private void txtFullNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFullNameKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFullNameKeyReleased

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDActionPerformed

    private void txtIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIDKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDKeyReleased

    private void txtCountryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCountryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCountryActionPerformed

    private void txtCountryKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCountryKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCountryKeyReleased

    private void txtMNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMNumberActionPerformed

    private void txtMNumberKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMNumberKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMNumberKeyReleased

    private void txtTNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTNumberActionPerformed

    private void txtTNumberKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTNumberKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTNumberKeyReleased

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void txtEmailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmailKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailKeyReleased

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        String search = txtSearch.getText().toLowerCase();
        searchFilter(search);
        
    }//GEN-LAST:event_txtSearchKeyReleased
     private void searchFilter(String search){
         
       TableRowSorter sorter = new TableRowSorter(tblPatient.getModel());

        sorter.setRowFilter(RowFilter.regexFilter("(?i).*\\Q" + search + "\\E.*"));

        tblPatient.setRowSorter(sorter);

        if (tblPatient.getRowCount() == 0) {
            sorter.setRowFilter(null);
            //JOptionPane.showMessageDialog(null, "No result");
        }
       
        
    }
    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnAdd1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAdd1MouseClicked
        // TODO add your handling code here:
//----------------------------------------------------------------------------------------------------------------        
        Patient newPatient = new Patient();
         SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String thedate = dateFormat.format(txtDOB.getDate());
        
        
//----------------------------------------------------------------------------------------------------------------        
           
        //inrtBoks.Insert_tempbookings(new_bookings);
        FirebaseDatabase database = FirebaseDatabase.getInstance();
        DatabaseReference myRef = database.getReference("Dentz/Patient");
//----------------------------------------------------------------------------------------------------------------        
        
        newPatient.setFullName(txtFullName.getText());
        newPatient.setDOB(thedate);
        newPatient.setNIC(txtID.getText());
        newPatient.setAddress(txtAddress.getText());
        newPatient.setCountry(txtCountry.getText());
        newPatient.setMobileNm(Integer.parseInt(txtMNumber.getText()));
        newPatient.setTelNm(Integer.parseInt(txtTNumber.getText()));
        newPatient.setEmail(txtEmail.getText());
        newPatient.setDrugAllergies(txtDrugAllergies.getText());
        newPatient.setCurrentMedicine(txtCurrentMed.getText());
        newPatient.setMedicalHistory(txtMedHistory.getText());
        //newPatient.setDoctorsNote(txtDocNote.getText());
//----------------------------------------------------------------------------------------------------------------        
             myRef.push().setValue(newPatient, new DatabaseReference.CompletionListener() {
            @Override
            public void onComplete(DatabaseError de, DatabaseReference dr) {
                if(de!=null){
                    JOptionPane.showMessageDialog(null, dr);
                }
                else{
                    JOptionPane.showMessageDialog(null, "Data Saved Succesfully");
                }
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        });
//----------------------------------------------------------------------------------------------------------------        
        clear();
        
    }//GEN-LAST:event_btnAdd1MouseClicked
    private void clear(){
        txtFullName.setText(null);
        txtAddress.setText(null);
        txtCountry.setText(null);
        txtCurrentMed.setText(null);
        //txtDocNote.setText(null);
        txtDrugAllergies.setText(null);
        txtEmail.setText(null);
        txtID.setText(null);
        txtMNumber.setText(null);
        txtMedHistory.setText(null);
        txtTNumber.setText(null);
        
       
    }
    private void tableSort(){
        TableRowSorter<TableModel> sorter = new TableRowSorter<>(tblPatient.getModel());
                   tblPatient.setRowSorter(sorter);
                    ArrayList list = new ArrayList();
                    list.add( new RowSorter.SortKey(0, SortOrder.ASCENDING) );
                    sorter.setSortKeys(list);
                    sorter.sort();
    }
    private void btnUpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateMouseClicked
        // TODO add your handling code here:
//----------------------------------------------------------------------------------------------------------------        
        Patient newPatient = new Patient();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String thedate = dateFormat.format(txtDOB.getDate());
        
        
//----------------------------------------------------------------------------------------------------------------        
        newPatient.setFullName(txtFullName.getText());
        newPatient.setDOB(thedate);
        newPatient.setNIC(txtID.getText());
        newPatient.setAddress(txtAddress.getText());
        newPatient.setCountry(txtCountry.getText());
        newPatient.setMobileNm(Integer.parseInt(txtMNumber.getText()));
        newPatient.setTelNm(Integer.parseInt(txtTNumber.getText()));
        newPatient.setEmail(txtEmail.getText());
        newPatient.setDrugAllergies(txtDrugAllergies.getText());
        newPatient.setCurrentMedicine(txtCurrentMed.getText());
        newPatient.setMedicalHistory(txtMedHistory.getText());
//        newPatient.setDoctorsNote(txtDocNote.getText());
        
//----------------------------------------------------------------------------------------------------------------        
        FirebaseDatabase database = FirebaseDatabase.getInstance();
        DatabaseReference myRef = database.getReference("Dentz/Patient");
        
//----------------------------------------------------------------------------------------------------------------        
            
            
//----------------------------------------------------------------------------------------------------------------        
        Map<String, Object> PatientUpdates = new HashMap<>();
        PatientUpdates.put(txtPID.getText(), newPatient);
        
        myRef.updateChildrenAsync(PatientUpdates);
//----------------------------------------------------------------------------------------------------------------        
 
        clear();
        txtPID.setText(null);
    }//GEN-LAST:event_btnUpdateMouseClicked

    private void btnDelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDelMouseClicked
        // TODO add your handling code here:
        int  result= JOptionPane.showConfirmDialog(null, "Are you sure?", "Do you want to delete",JOptionPane.YES_NO_CANCEL_OPTION);
        
        if(result==0){
            
 //----------------------------------------------------------------------------------------------------------------        
            FirebaseDatabase database = FirebaseDatabase.getInstance();
            DatabaseReference myRef = database.getReference("Dentz/Patient");
 
            myRef.addListenerForSingleValueEvent(new ValueEventListener() {
                @Override
                public void onDataChange(DataSnapshot ds) {
                   myRef.child(txtPID.getText()).removeValueAsync();
                }

                @Override
                public void onCancelled(DatabaseError de) {
                    throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                }
            });
//----------------------------------------------------------------------------------------------------------------        
             
            DatabaseReference myRef2 = database.getReference("Dentz/Booking");
         myRef2.addListenerForSingleValueEvent(new ValueEventListener() {
                @Override
                public void onDataChange(DataSnapshot dataSnapshot) {
                  
                 Iterable<DataSnapshot> children = dataSnapshot.getChildren();
               
                  for(DataSnapshot child:children){
                      Booking bk=child.getValue(Booking.class);
                      bk.setBookID(child.getKey());
                      //allbooking.add(bk);                    
                     
                    if(bk.getPID().equals(txtPID.getText())){
                    System.out.println(child.getKey());
                     myRef2.child(child.getKey()).removeValueAsync();
                    }
            
                  }                              
                }                
                @Override
                public void onCancelled(DatabaseError databaseError) {
                  System.out.println("The read failed: " + databaseError.getCode());
                }
              });
             
//----------------------------------------------------------------------------------------------------------------        
         
           clear();
           txtPID.setText(null);
//----------------------------------------------------------------------------------------------------------------        
                JOptionPane.showMessageDialog(null, "Succesfully Deleted");
            
        }
        
        
       
        
    }//GEN-LAST:event_btnDelMouseClicked
    private void updateTable(String PID,Patient updatedPatient){
         
        DefaultTableModel pat_model = (DefaultTableModel)tblPatient.getModel();
        
        int size= pat_model.getRowCount();
            
            for(int i=0;i<size;i++){
                if((pat_model.getValueAt(i, 3)).equals(PID)){
                    pat_model.setValueAt(updatedPatient.getFullName(), i, 0);
                    pat_model.setValueAt(updatedPatient.getNIC(), i, 1);
                    pat_model.setValueAt(updatedPatient.getMobileNm(), i, 2);
                    pat_model.setValueAt(updatedPatient.getPID(), i, 3);
                    pat_model.setValueAt(updatedPatient.getDOB(), i, 4);
                    pat_model.setValueAt(updatedPatient.getAddress(), i, 5);
                    pat_model.setValueAt(updatedPatient.getTelNm(), i, 6);
                    pat_model.setValueAt(updatedPatient.getCountry(), i, 7);
                    pat_model.setValueAt(updatedPatient.getCurrentMedicine(), i, 8);
                    pat_model.setValueAt(updatedPatient.getDrugAllergies(), i, 9);
                    pat_model.setValueAt(updatedPatient.getDoctorsNote(), i, 10);
                    pat_model.setValueAt(updatedPatient.getEmail(), i, 11);
                    pat_model.setValueAt(updatedPatient.getMedicalHistory(), i, 12);
                }
            }
        
        
    }
    
     private void DeleteRecordTable(String PID){
        DefaultTableModel pat_model = (DefaultTableModel)tblPatient.getModel();
        
        int size= pat_model.getRowCount();
            
            for(int i=0;i<size;i++){
                if((pat_model.getValueAt(i, 3)).equals(PID)){
                    pat_model.removeRow(i );
                  
                }
            }
    }
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        
    }//GEN-LAST:event_formWindowOpened

    private void tblPatientMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPatientMouseClicked
        // TODO add your handling code here:
//----------------------------------------------------------------------------------------------------------------        
        clear();
        txtPID.setText(null);
        DefaultTableModel pat_model = (DefaultTableModel)tblPatient.getModel();
         int rowindex = tblPatient.getRowSorter().convertRowIndexToModel(tblPatient.getSelectedRow());
        
        String Dt = pat_model.getValueAt(rowindex,4).toString();
        
        LocalDate cladate = LocalDate.parse(Dt); 
        java.util.Date date = java.sql.Date.valueOf(cladate);
//        JOptionPane.showMessageDialog(null, pat_model.getValueAt(rowindex,11).toString());
//        JOptionPane.showMessageDialog(null, pat_model.getValueAt(rowindex,12).toString());
//        JOptionPane.showMessageDialog(null, pat_model.getValueAt(rowindex,10).toString());
 //----------------------------------------------------------------------------------------------------------------        
        txtFullName.setText(pat_model.getValueAt(rowindex,0).toString());
        txtID.setText(pat_model.getValueAt(rowindex,1).toString());
        txtMNumber.setText(pat_model.getValueAt(rowindex,2).toString());
        txtPID.setText(pat_model.getValueAt(rowindex,3).toString());
        txtDOB.setDate(date);
        txtAddress.setText(pat_model.getValueAt(rowindex,5).toString());
        txtTNumber.setText(pat_model.getValueAt(rowindex,6).toString());
        txtCountry.setText(pat_model.getValueAt(rowindex,7).toString());
        txtCurrentMed.setText(pat_model.getValueAt(rowindex,8).toString());
        txtDrugAllergies.setText(pat_model.getValueAt(rowindex,9).toString()); 
        txtEmail.setText(pat_model.getValueAt(rowindex,11).toString());
        txtMedHistory.setText(pat_model.getValueAt(rowindex,12).toString());
       // txtDocNote.setText(pat_model.getValueAt(rowindex,10).toString());
        
    }//GEN-LAST:event_tblPatientMouseClicked
    private void tblload(){
 //----------------------------------------------------------------------------------------------------------------        
        
        FirebaseDatabase database = FirebaseDatabase.getInstance();
        DatabaseReference myRef = database.getReference("Dentz/Patient");
        ArrayList<Patient> allPatients = new ArrayList<Patient>();
         DefaultTableModel pat_model = (DefaultTableModel)tblPatient.getModel();
         pat_model.setRowCount(0);
         Object rowdata[] = new Object[14];
 //----------------------------------------------------------------------------------------------------------------        
 //----------------------------------------------------------------------------------------------------------------        
  
           myRef.addChildEventListener(new ChildEventListener() {
                @Override
                public void onChildAdded(DataSnapshot dataSnapshot, String prevChildKey) {
                   // pat_model.setRowCount(0);
                    allPatients.clear();
                    
                    
                    Patient patients=dataSnapshot.getValue(Patient.class);
                    //allPatients.add(patients);
                    patients.setPID(dataSnapshot.getKey());
                    
                        rowdata[0] = patients.getFullName();
                        rowdata[1] = patients.getNIC();
                        rowdata[2] = patients.getMobileNm();
                        rowdata[3] = patients.getPID();
                        rowdata[4] = patients.getDOB();
                        rowdata[5] = patients.getAddress();
                        rowdata[6] = patients.getTelNm();
                        rowdata[7] = patients.getCountry();
                        rowdata[8] = patients.getCurrentMedicine();
                        rowdata[9] = patients.getDrugAllergies();
                        rowdata[10] =patients.getDoctorsNote();
                        rowdata[11] =patients.getEmail();
                        rowdata[12] =patients.getMedicalHistory();
 
                        pat_model.addRow(rowdata);
                        tableSort();
                }

                @Override
                public void onChildChanged(DataSnapshot dataSnapshot, String prevChildKey) {
                
                    Patient patients=dataSnapshot.getValue(Patient.class);
                    //books.setBookID(dataSnapshot.getKey());
                    String PID = dataSnapshot.getKey();
                        updateTable(PID, patients);
                        tableSort();
                        
                
                }
           
                @Override
                public void onChildRemoved(DataSnapshot dataSnapshot) {
                    
                   Patient patients=dataSnapshot.getValue(Patient.class);
                
                    DeleteRecordTable(dataSnapshot.getKey());
                    tableSort();
                }

                @Override
                public void onChildMoved(DataSnapshot dataSnapshot, String prevChildKey) {}

                @Override
                public void onCancelled(DatabaseError databaseError) {}
              });



//----------------------------------------------------------------------------------------------------------------        
 

            myRef.addListenerForSingleValueEvent(new ValueEventListener() {
                @Override
                public void onDataChange(DataSnapshot dataSnapshot) {
                 pat_model.setRowCount(0);
                 allPatients.clear();
                 Iterable<DataSnapshot> children = dataSnapshot.getChildren();
                
                  for(DataSnapshot child:children){
                      Patient patients=child.getValue(Patient.class);
                      patients.setPID(child.getKey());
                      allPatients.add(patients); 
                      //JOptionPane.showMessageDialog(null, child.getKey());
                      
                  }

//----------------------------------------------------------------------------------------------------------------        

                    
                    
                    for(int i=0;i<allPatients.size();i++){
                       //JOptionPane.showMessageDialog(null, allPatients.get(i).getCurrentMedicine());
                       //JOptionPane.showMessageDialog(null, allPatients.get(i).getEmail());
                       //JOptionPane.showMessageDialog(null, allPatients.get(i).getDoctorsNote());
                       rowdata[0] = allPatients.get(i).getFullName();
                        rowdata[1] = allPatients.get(i).getNIC();
                        rowdata[2] = allPatients.get(i).getMobileNm();
                        rowdata[3] = allPatients.get(i).getPID();
                        rowdata[4] = allPatients.get(i).getDOB();
                        rowdata[5] = allPatients.get(i).getAddress();
                        rowdata[6] = allPatients.get(i).getTelNm();
                        rowdata[7] = allPatients.get(i).getCountry();
                        rowdata[8] = allPatients.get(i).getCurrentMedicine();
                        rowdata[9] = allPatients.get(i).getDrugAllergies();
                        rowdata[10] = allPatients.get(i).getDoctorsNote();
                        rowdata[11] = allPatients.get(i).getEmail();
                        rowdata[12] = allPatients.get(i).getMedicalHistory();
 
                        pat_model.addRow(rowdata);
                        
                    }
                    
                    
                   // JOptionPane.showMessageDialog(null, tbl_Mainbooking.getModel().getValueAt(0,6));
                    allPatients.clear();
                    tableSort();
                 
                }

                @Override
                public void onCancelled(DatabaseError databaseError) {
                  System.out.println("The read failed: " + databaseError.getCode());
                }
              });

 //----------------------------------------------------------------------------------------------------------------        
        
         
    }
    private void btnloadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnloadMouseClicked
        // TODO add your handling code here:
        // TODO add your handling code here:
      tblload();
    }//GEN-LAST:event_btnloadMouseClicked

    private void btnClear1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClear1MouseClicked
        // TODO add your handling code here:
        if(!txtPID.getText().isEmpty()){
            String PID= txtPID.getText();
            //JOptionPane.showMessageDialog(null, PID);
            String Name=txtFullName.getText();
            String MobileNm = txtMNumber.getText();
            int pass=1;
            this.setVisible(false);
            
            new Booking_main_test(PID, MobileNm, Name,pass,log_name,user_role)
                    .setVisible(true);
            
            
        }else{
            JOptionPane.showMessageDialog(null, "Please select a patient to view bookings");
        }
        
        
    }//GEN-LAST:event_btnClear1MouseClicked

    private void btnInsertMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInsertMouseClicked
        // TODO add your handling code here:
     //----------------------------------------------------------------------------------------------------------------        
           
        //inrtBoks.Insert_tempbookings(new_bookings);
                    FirebaseDatabase database = FirebaseDatabase.getInstance();
                    DatabaseReference myRef = database.getReference("Dentz/X-Ray-Images");
//----------------------------------------------------------------------------------------------------------------        
          
        DriveStart googleDrive= new DriveStart();
        String PID = txtPID.getText();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Image Files", "jpg", "png", "gif", "jpeg");
       JFileChooser j = new JFileChooser(FileSystemView.getFileSystemView().getHomeDirectory());
       j.setFileFilter(filter);
       j.setMultiSelectionEnabled(true); 
       int result= j.showSaveDialog(null);
       UploadFile upl = new UploadFile();
//----------------------------------------------------------------------------------------------------------------        
        
       
        if(result==JFileChooser.APPROVE_OPTION){
            File files[] = j.getSelectedFiles();
//----------------------------------------------------------------------------------------------------------------        
             
            if(files.length==1){
                String Upload_Name=files[0].getName();
                String type = "image/"+Upload_Name.substring(Upload_Name.lastIndexOf("."),Upload_Name.length());
                String Upload_Path = files[0].getAbsolutePath();
                try {
//----------------------------------------------------------------------------------------------------------------        
                    
                   String File_ID = googleDrive.Uploader(Upload_Name,Upload_Path,type);
                   upl.setIMage1(File_ID);
                   upl.setPID(PID);
                   //JOptionPane.showMessageDialog(null, File_ID);
//----------------------------------------------------------------------------------------------------------------        
                    
                  
                   
                   myRef.push().setValue(upl, new DatabaseReference.CompletionListener() {
                @Override
                public void onComplete(DatabaseError de, DatabaseReference dr) {
                    JOptionPane.showMessageDialog(null, "Data Saved Succesfully");
                }
            });
//----------------------------------------------------------------------------------------------------------------        
                   
                   
                } catch (GeneralSecurityException ex) {
                    Logger.getLogger(patientRecords.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(patientRecords.class.getName()).log(Level.SEVERE, null, ex);
                }
                 
            }
//----------------------------------------------------------------------------------------------------------------        
             
            if(files.length==2){
                
                String Upload_Name=files[0].getName();
                String type = "image/"+Upload_Name.substring(Upload_Name.lastIndexOf("."),Upload_Name.length());
                String Upload_Path = files[0].getAbsolutePath();
                
                String Upload_Name2=files[1].getName();
                String type2 = "image/"+Upload_Name.substring(Upload_Name.lastIndexOf("."),Upload_Name.length());
                String Upload_Path2 = files[1].getAbsolutePath();
//----------------------------------------------------------------------------------------------------------------        
                 
                try {
                   
                   String File_ID = googleDrive.Uploader(Upload_Name,Upload_Path,type);
                   String File_ID2 = googleDrive.Uploader(Upload_Name2,Upload_Path2,type2);
                   upl.setIMage1(File_ID);
                   upl.setIMage2(File_ID2);
                   upl.setPID(PID);
                  // JOptionPane.showMessageDialog(null, File_ID);
                  // JOptionPane.showMessageDialog(null, File_ID2);
//----------------------------------------------------------------------------------------------------------------        
                    
                   
                   myRef.push().setValue(upl, new DatabaseReference.CompletionListener() {
                @Override
                public void onComplete(DatabaseError de, DatabaseReference dr) {
                    JOptionPane.showMessageDialog(null, "Data Saved Succesfully");
                }
            });
 //----------------------------------------------------------------------------------------------------------------        
                  
                   
                } catch (GeneralSecurityException ex) {
                    Logger.getLogger(patientRecords.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(patientRecords.class.getName()).log(Level.SEVERE, null, ex);
                }  
            }
//----------------------------------------------------------------------------------------------------------------        
             
            if(files.length==3){
                
                String Upload_Name=files[0].getName();
                String type = "image/"+Upload_Name.substring(Upload_Name.lastIndexOf("."),Upload_Name.length());
                String Upload_Path = files[0].getAbsolutePath();
                
                String Upload_Name2=files[1].getName();
                String type2 = "image/"+Upload_Name.substring(Upload_Name.lastIndexOf("."),Upload_Name.length());
                String Upload_Path2 = files[1].getAbsolutePath();
                
                String Upload_Name3=files[2].getName();
                String type3 = "image/"+Upload_Name.substring(Upload_Name.lastIndexOf("."),Upload_Name.length());
                String Upload_Path3 = files[2].getAbsolutePath();
//----------------------------------------------------------------------------------------------------------------        
                 
                try {
                   
                   String File_ID = googleDrive.Uploader(Upload_Name,Upload_Path,type);
                   String File_ID2 = googleDrive.Uploader(Upload_Name2,Upload_Path2,type2);
                   String File_ID3 = googleDrive.Uploader(Upload_Name3,Upload_Path3,type3);
                   
                   upl.setIMage1(File_ID);
                   upl.setIMage2(File_ID2);
                   upl.setIMage3(File_ID3);
                   upl.setPID(PID);
                   
                   //JOptionPane.showMessageDialog(null, File_ID);
                  // JOptionPane.showMessageDialog(null, File_ID2);
                  // JOptionPane.showMessageDialog(null, File_ID3);
//----------------------------------------------------------------------------------------------------------------        
                    
                  
                   myRef.push().setValue(upl, new DatabaseReference.CompletionListener() {
                @Override
                public void onComplete(DatabaseError de, DatabaseReference dr) {
                    JOptionPane.showMessageDialog(null, "Data Saved Succesfully");
                }
            });
                  
                   
                } catch (GeneralSecurityException ex) {
                    Logger.getLogger(patientRecords.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(patientRecords.class.getName()).log(Level.SEVERE, null, ex);
                }  
            }
           
//----------------------------------------------------------------------------------------------------------------        
        
        }else{
            JOptionPane.showMessageDialog(null, "You didn't select ant file");
        }    
        
    }//GEN-LAST:event_btnInsertMouseClicked
    private void URLOpener(String link1,String link2,String link3,String link4){
        
        Object[] options = { "Open Images", "Don't open", "Cancel" };

        int nm = JOptionPane.showOptionDialog(null,"There are Patients X-Ray Images", "X-Rays of Patient",
               JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, // do not use a custom Icon
               options, // the titles of buttons
                options[0]);
        
        
                 if(nm==0){
                            if(link2.length()<36 ){
                                  desktop(link1);
                            }
                             if(link3.length()<36 ){
                                    desktop(link1);
                                    desktop(link2);
                            }
                              if(link1.length()>36 && link2.length()>36 && link3.length()>36 && link4.length()<36){
                               desktop(link1);
                               desktop(link2);
                               desktop(link3);
                            }
                               if(link4.length()>40){
                                   desktop(link1);
                                   desktop(link2);
                                   desktop(link3);
                                   desktop(link4);
                            }

                        }
                        else{
                            //JOptionPane.showMessageDialog(null, "Closing Image Dialouge");
                        }
    
    }
     private void desktop(String link){
                              try {
                                   Desktop.getDesktop().browse(new URL(link).toURI());
                                } catch (Exception e) {
                                    e.printStackTrace();
                                }
    }
    private void btnURLOpenerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnURLOpenerMouseClicked

        // TODO add your handling code here:
 //----------------------------------------------------------------------------------------------------------------        
         
          ArrayList<UploadFile> allImages = new ArrayList<UploadFile>();
        //inrtBoks.Insert_tempbookings(new_bookings);
        FirebaseDatabase database = FirebaseDatabase.getInstance();
        DatabaseReference myRef = database.getReference("Dentz/X-Ray-Images");
        
//----------------------------------------------------------------------------------------------------------------        
       myRef.addValueEventListener(new ValueEventListener() {
            @Override
            public void onDataChange(DataSnapshot dataSnapshot) {
                String link1,link2,link3,link4 =null;
                allImages.clear();
                Iterable<DataSnapshot> children = dataSnapshot.getChildren();
                
                
                for(DataSnapshot child:children){
                    UploadFile dwnImages = child.getValue(UploadFile.class);
                   
                    allImages.add(dwnImages);
                }
               
                for(int i=0;i<allImages.size();i++){
                    if(txtPID.getText().equals(allImages.get(i).getPID())){
                         link1= "https://drive.google.com/uc?id="+allImages.get(i).getIMage1();
                         link2= "https://drive.google.com/uc?id="+allImages.get(i).getIMage2();
                         link3= "https://drive.google.com/uc?id="+allImages.get(i).getIMage3();
                         link4= "https://drive.google.com/uc?id="+allImages.get(i).getIMage4();   
                         
                         URLOpener( link1, link2, link3, link4);
                    }               
                }
               
                        
                        
                allImages.clear();
              
            }

            @Override
            public void onCancelled(DatabaseError databaseError) {
              System.out.println("The read failed: " + databaseError.getCode());
            }
          });
        
    }//GEN-LAST:event_btnURLOpenerMouseClicked

    private void kGradientPanel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kGradientPanel2MousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_kGradientPanel2MousePressed

    private void kGradientPanel2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kGradientPanel2MouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();

        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_kGradientPanel2MouseDragged

    ImageIcon iconEntered = new ImageIcon("img/icons8-go-back-702.png");
    ImageIcon iconExited = new ImageIcon("img/icons8-go-back-70.png");
    private void lblBackMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBackMouseEntered
           lblBack.setIcon(iconEntered);
    }//GEN-LAST:event_lblBackMouseEntered

    private void lblBackMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBackMouseExited
        lblBack.setIcon(iconExited);
    }//GEN-LAST:event_lblBackMouseExited

    
    private void lblBackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBackMouseClicked
        home hm = new home(log_name, user_role);
        hm.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_lblBackMouseClicked

    private void btnSaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseClicked
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_btnSaveMouseClicked

    private void txtMNumberKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMNumberKeyTyped
        // TODO add your handling code here:
        if(txtMNumber.getText().length()>=10){
           evt.consume();
           JOptionPane.showMessageDialog(this, "Enter Valid Phone Number");
           txtMNumber.setText("");
        }
        
    }//GEN-LAST:event_txtMNumberKeyTyped

    private void txtTNumberKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTNumberKeyTyped
        // TODO add your handling code here:
        
        if(txtTNumber.getText().length()>=10){
           evt.consume();
           JOptionPane.showMessageDialog(this, "Enter Valid Phone Number");
           txtTNumber.setText("");
        }
    }//GEN-LAST:event_txtTNumberKeyTyped

    private void txtEmailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmailKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailKeyTyped
    private void columnhide1(){
        
           TableColumn tcol = tblPatient.getColumnModel().getColumn(4);
           tblPatient.removeColumn(tcol);
           
           TableColumn tcol1 = tblPatient.getColumnModel().getColumn(5);
           tblPatient.removeColumn(tcol1);
           
           TableColumn tcol2 = tblPatient.getColumnModel().getColumn(6);
           tblPatient.removeColumn(tcol2);
           
           TableColumn tcol3 = tblPatient.getColumnModel().getColumn(7);
           tblPatient.removeColumn(tcol3);
           
           TableColumn tcol4 = tblPatient.getColumnModel().getColumn(8);
           tblPatient.removeColumn(tcol4);
                
    }
    
    private void columnhide2(){
           TableColumn tcol = tblPatient.getColumnModel().getColumn(4);
           tblPatient.removeColumn(tcol);
           
           TableColumn tcol1 = tblPatient.getColumnModel().getColumn(5);
           tblPatient.removeColumn(tcol1);
           
           TableColumn tcol2 = tblPatient.getColumnModel().getColumn(4);
           tblPatient.removeColumn(tcol2);
           
           TableColumn tcol3 = tblPatient.getColumnModel().getColumn(4);
           tblPatient.removeColumn(tcol3);
           
           TableColumn tcol4 = tblPatient.getColumnModel().getColumn(3);
           tblPatient.removeColumn(tcol4);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(patientRecords.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(patientRecords.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(patientRecords.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(patientRecords.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new patientRecords().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private keeptoo.KButton btnAdd1;
    private keeptoo.KButton btnClear1;
    private javax.swing.JLabel btnClose;
    private keeptoo.KButton btnDel;
    private keeptoo.KButton btnInsert;
    private javax.swing.JLabel btnMinimize;
    private keeptoo.KButton btnSave;
    private keeptoo.KButton btnSearch;
    private keeptoo.KButton btnURLOpener;
    private keeptoo.KButton btnUpdate;
    private keeptoo.KButton btnload;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private keeptoo.KGradientPanel kGradientPanel2;
    private keeptoo.KGradientPanel kGradientPanel3;
    private javax.swing.JLabel lblBack;
    private javax.swing.JLabel lbl_logname;
    private javax.swing.JTable tblPatient;
    private javax.swing.JTextArea txtAddress;
    private javax.swing.JTextField txtCountry;
    private javax.swing.JTextArea txtCurrentMed;
    private com.toedter.calendar.JDateChooser txtDOB;
    private javax.swing.JTextArea txtDrugAllergies;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFullName;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtMNumber;
    private javax.swing.JTextArea txtMedHistory;
    private javax.swing.JTextField txtPID;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtTNumber;
    // End of variables declaration//GEN-END:variables
}
