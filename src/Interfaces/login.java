package Interfaces;

import Database.DB_conn;
import Database.Login_check;
import Users.User;
import Validation.Password;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;
import java.awt.Color;
import java.awt.Frame;
import java.awt.List;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.security.NoSuchAlgorithmException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author MaC
 */
public class login extends javax.swing.JFrame {

    /**
     * Creates new form login
     */
    int xMouse;
    int yMouse;
    private String logName = null;
    private String jobrole = null;
    public login() {
        initComponents();    
        
        try {
            DB_conn.initFirbase();
        } catch (IOException ex) {
            Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
        }
        dataload();
    }
    
     ArrayList<User> allusers1= new ArrayList<User>();
     //data load into alluser array list
    public void dataload(){
          
        FirebaseDatabase database = FirebaseDatabase.getInstance();
        DatabaseReference myRef = database.getReference("Dentz/Users");
        
         myRef.addListenerForSingleValueEvent(new ValueEventListener() {
                @Override
                public void onDataChange(DataSnapshot dataSnapshot) {
                  
                 Iterable<DataSnapshot> children = dataSnapshot.getChildren();
               
                  for(DataSnapshot child:children){
                      User usr=child.getValue(User.class);
                      allusers1.add(usr);  
                      System.out.println(allusers1.size());                 
                  }                              
                }                
                @Override
                public void onCancelled(DatabaseError databaseError) {
                  System.out.println("The read failed: " + databaseError.getCode());
                }
              });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgPanel = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        txtUser = new javax.swing.JTextField();
        txtPass = new javax.swing.JPasswordField();
        lblpass = new javax.swing.JLabel();
        lblusr = new javax.swing.JLabel();
        btnClose = new javax.swing.JLabel();
        btnMinimize = new javax.swing.JLabel();
        MoveBar = new javax.swing.JLabel();
        bgLoginLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setName("Login"); // NOI18N
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        bgPanel.setBackground(new java.awt.Color(49, 49, 49));
        bgPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setBackground(new java.awt.Color(204, 204, 204));
        jButton1.setFont(new java.awt.Font("Impact", 0, 36)); // NOI18N
        jButton1.setText("LOGIN");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        bgPanel.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 380, 230, 50));

        txtUser.setBorder(null);
        txtUser.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtUserFocusGained(evt);
            }
        });
        txtUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserActionPerformed(evt);
            }
        });
        txtUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUserKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtUserKeyTyped(evt);
            }
        });
        bgPanel.add(txtUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 230, 210, 28));

        txtPass.setBorder(null);
        txtPass.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPassFocusGained(evt);
            }
        });
        txtPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPassActionPerformed(evt);
            }
        });
        txtPass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPassKeyPressed(evt);
            }
        });
        bgPanel.add(txtPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 310, 210, 28));

        lblpass.setForeground(new java.awt.Color(255, 0, 51));
        bgPanel.add(lblpass, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 350, 230, 20));

        lblusr.setForeground(new java.awt.Color(255, 0, 51));
        bgPanel.add(lblusr, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 260, 230, 20));

        btnClose.setBackground(new java.awt.Color(49, 49, 49));
        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/close.png"))); // NOI18N
        btnClose.setOpaque(true);
        btnClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCloseMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCloseMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCloseMouseExited(evt);
            }
        });
        bgPanel.add(btnClose, new org.netbeans.lib.awtextra.AbsoluteConstraints(838, 2, -1, -1));

        btnMinimize.setBackground(new java.awt.Color(49, 49, 49));
        btnMinimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/mini.png"))); // NOI18N
        btnMinimize.setOpaque(true);
        btnMinimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnMinimizeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnMinimizeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnMinimizeMouseExited(evt);
            }
        });
        bgPanel.add(btnMinimize, new org.netbeans.lib.awtextra.AbsoluteConstraints(808, 2, -1, -1));

        MoveBar.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                MoveBarMouseDragged(evt);
            }
        });
        MoveBar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                MoveBarMousePressed(evt);
            }
        });
        bgPanel.add(MoveBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 870, 30));

        bgLoginLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/login.png"))); // NOI18N
        bgPanel.add(bgLoginLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(5, 34, -1, 500));

        getContentPane().add(bgPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 870, 540));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void MoveBarMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MoveBarMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        
        this.setLocation(x - xMouse, y - yMouse);
    }//GEN-LAST:event_MoveBarMouseDragged

    private void MoveBarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MoveBarMousePressed
        xMouse = evt.getX();
        yMouse = evt.getY();
    }//GEN-LAST:event_MoveBarMousePressed

    private void btnCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCloseMouseClicked
         int result = JOptionPane.showConfirmDialog(this, "Are You Sure You Want To Cancel?",null,JOptionPane.YES_NO_OPTION);
        
        if(result == 0){
            this.dispose();
        }else{
            System.out.println(result);            
        }
    }//GEN-LAST:event_btnCloseMouseClicked

    private void btnMinimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMinimizeMouseClicked
       //login log = new login();
       this.setState(Frame.ICONIFIED);
    }//GEN-LAST:event_btnMinimizeMouseClicked

    private void btnCloseMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCloseMouseEntered
        btnClose.setBackground(new Color(117, 117, 117));
    }//GEN-LAST:event_btnCloseMouseEntered

    private void btnMinimizeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMinimizeMouseEntered
        btnMinimize.setBackground(new Color(117, 117, 117));
    }//GEN-LAST:event_btnMinimizeMouseEntered

    private void btnMinimizeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMinimizeMouseExited
        btnMinimize.setBackground(new Color(49, 49, 49));
    }//GEN-LAST:event_btnMinimizeMouseExited

    private void btnCloseMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCloseMouseExited
        btnClose.setBackground(new Color(49, 49, 49));
    }//GEN-LAST:event_btnCloseMouseExited

    private void txtUserKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUserKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserKeyTyped

    private void txtUserKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUserKeyPressed
        // TODO add your handling code here:
//        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
//      // Enter was pressed. Your code goes here.
////      String usr= txtUser.getText();
////      String pass=txtPass.getText();
//        if(txtUser.getText().isEmpty() ){
//            //JOptionPane.showMessageDialog(null, "User Name is empty ");
//            lblusr.setText("User Name is empty");
//        }
//        if(txtPass.getText().isEmpty()){
//             lblpass.setText("Password is empty");
//        }
//        else{
//            
//        }
//      
//   }
    }//GEN-LAST:event_txtUserKeyPressed

    private void txtUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserActionPerformed

    private void txtPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPassActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPassActionPerformed

    private void txtPassKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPassKeyPressed
        // TODO add your handling code here:
         if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
      // Enter was pressed. Your code goes here.
             String usrN= txtUser.getText();
        String passN=txtPass.getText();
        if(txtUser.getText().isEmpty() ){
            //JOptionPane.showMessageDialog(null, "User Name is empty ");
            lblusr.setText("User Name is empty");
        }
        if(txtPass.getText().isEmpty()){
             lblpass.setText("Password is empty");
        }
        else{          
            int value = 0;
            
            String EnPassword = null ;   
            
            //Encrypt input password            
            Password pass = new Password();
            try {
              EnPassword = pass.passwordEncord(passN);
            } catch (NoSuchAlgorithmException ex) {
                Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
            }
            
           //check input password with database password
            for(int i =0; i<allusers1.size();i++){
                if(allusers1.get(i).getUserName().equals(usrN) && allusers1.get(i).getPassword().equals(EnPassword)){
                    value = 1;  
                    logName = allusers1.get(i).getName();
                    jobrole = allusers1.get(i).getJobRole();
                }                
            }                    
            if (value == 1) {
               int result = JOptionPane.showConfirmDialog(this, "Login Success!",null,JOptionPane.DEFAULT_OPTION);
                
                if(result == 0){
                    home hm =  new home(logName,jobrole);
                    hm.setVisible(true);
                    this.dispose();
                }          
            }else{
                JOptionPane.showMessageDialog(null, "Your Username Or Password invalid");
            }
      
        }
     }
    }//GEN-LAST:event_txtPassKeyPressed

    private void txtUserFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUserFocusGained
        // TODO add your handling code here:
        lblusr.setText("");
         lblpass.setText("");
    }//GEN-LAST:event_txtUserFocusGained

    private void txtPassFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPassFocusGained
        // TODO add your handling code here:
        lblpass.setText("");
        lblusr.setText("");
    }//GEN-LAST:event_txtPassFocusGained

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened
       
    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        String usrN= txtUser.getText();
        String passN=txtPass.getText();
        if(txtUser.getText().isEmpty() ){
            //JOptionPane.showMessageDialog(null, "User Name is empty ");
            lblusr.setText("User Name is empty");
        }
        if(txtPass.getText().isEmpty()){
             lblpass.setText("Password is empty");
        }
        else{          
            int value = 0;
            
            String EnPassword = null ;   
            
            //Encrypt input password            
            Password pass = new Password();
            try {
              EnPassword = pass.passwordEncord(passN);
            } catch (NoSuchAlgorithmException ex) {
                Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
            }
            
           //check input password with database password
            for(int i =0; i<allusers1.size();i++){
                if(allusers1.get(i).getUserName().equals(usrN) && allusers1.get(i).getPassword().equals(EnPassword)){
                    value = 1;  
                    logName = allusers1.get(i).getName();
                    jobrole = allusers1.get(i).getJobRole();
                }                
            }                    
            if (value == 1) {
               int result = JOptionPane.showConfirmDialog(this, "Login Success!",null,JOptionPane.DEFAULT_OPTION);
                
                if(result == 0){
                    home hm =  new home(logName, jobrole);
                    hm.setVisible(true);
                    this.dispose();
                }          
            }else{
                JOptionPane.showMessageDialog(null, "Your Username Or Password invalid");
            }
      
        }
    }//GEN-LAST:event_jButton1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
    

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel MoveBar;
    private javax.swing.JLabel bgLoginLabel;
    private javax.swing.JPanel bgPanel;
    private javax.swing.JLabel btnClose;
    private javax.swing.JLabel btnMinimize;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel lblpass;
    private javax.swing.JLabel lblusr;
    private javax.swing.JPasswordField txtPass;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables
}
